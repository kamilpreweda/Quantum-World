<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/JcU+/yHEPQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/LLwX/yi3ef8q
        uHr/LrkWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/6zebP+u4Ir/reBj/zCsb/8x
        qhX/LKYX/y+sbP+t3mT/ruCK/6zebAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP+v038AAAAA/7DSLf9e
        sMX/s9Ue/63WH/9fsMT/rtEsAAAAAP+v038AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/s8hh/7DGLQAA
        AAD/PZGC/7LIpv+xx6T/PZKBAAAAAP+zyS//scdfAAAAAAAAAAAAAAAAAAAAAAAAAAD/OoAW/0CDZ/9t
        msP/QIR4/z+Ewf9Ri57/VIyk/z+Ewf9Chnj/bZrD/0GFZv89hhUAAAAAAAAAAAAAAAD/RXZD/0Z2ef9A
        cBD/uLEk/7iunv9ZgZr/uK/D/7iuwf9ZgZr/uK6e/7avI/9LeBH/RnZ5/0Z4QgAAAAAAAAAA/0loQv9M
        aXL/UHAQ/7uiKf+7oqX/X3Ob/7ujv/+8o73/X3Sc/7uipf++oyf/S2kR/0tqc/9LakEAAAAAAAAAAAAA
        AAD/UV0W/1Fdbv93cs7/Ul5//1Fcwf9hZp7/ZGek/1Fcwf9SXn//d3LO/1Jebf9VYRUAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/Ai2H/v4owAAAAAP9YUIL/wIun/8CLpf9ZT4EAAAAA/76MM//BjF8AAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAD/w35/AAAAAP/BfS3/gFjL/8aAJP/BfCX/gFjL/8WALAAAAAD/w35/AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/8Z0ef/Hc3r/x3Nb/2M3b/9jORL/ZjMU/2E1bv/Fc13/x3N6/8ZzeAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9kLBf/Zyh5/2Yoev9oIxYAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/20aRP9uG0MAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAPfvAAD9vwAA/D8AAPQvAAD4HwAA+B8AAPQv
        AAD8PwAA/b8AAP//AAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/JMEx/ybC4P8lwt//JcUwAAAAAAAAAAAAAAAAAAAAAAAA
        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
        0T/+e95///2////9v////n//////////////////
</value>
  </data>
</root>